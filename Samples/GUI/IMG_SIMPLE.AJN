' ================================================================================
' IMG系の描画サンプルプログラム 
'  左に元画像を表示する領域、右にIMG関数を呼び出した結果を出力する領域を用意します。
'  中央のラジオボタンのメニューを選択すると、IMG関数を呼び出して、
'  結果を右の領域に表示します。
'  左上のボタンで、変換元となる画像を、オープンダイアログから選択できます。
'				Copyright 2022 Interface Corporation
' ================================================================================

' GUIを使う事を宣言
OPTION GUI

INCLUDE "GUI002.AJN"
LIST	ARY%, ARY2%, TMP%

' 画像読取ボタン
SUB CB_LOAD(NUM, NM$, EVT)
	IMG_PATH$ = GUDIALOGBOX OPEN$(1, CURDIR$)
	IF IMG_PATH$ <> "" THEN CALL IMG_READ_AND_DRAW()
END SUB

' 画像読取と左へ貼り付け
SUB IMG_READ_AND_DRAW()
	' 左ペインをクリア
	GUGCLS PIC 10
	' 画像データを読み取る
	ARY% = IMG_READ(IMG_PATH$, 2)
	' GUGDATASETが使える形式に変換
	TMP% = IMG2GUG_DATA(ARY%)
	' 画像データを左ペインに貼り付ける
	GUGDATASET PIC 10, (0,0), TMP%
END SUB

' ラジオボタンの選択 -> IMGコマンド呼び出し
SUB CB_IMG(NUM, NM$, EVT)
	LOCAL S$
	LOCAL LIST MTX
	S$ = GUGET$ RADIOBTN(10)
	PRINT "選択名="; S$
	SELECT CASE S$
	CASE "転写"
		ARY2% = ARY%
	CASE "IMG_CONVERT_COLOR"
		IF LDIM(ARY%, 3) = 1 THEN
			' グレー -> カラー
			ARY2% = IMG_CONVERT_COLOR(ARY%, 2, 0)
		ELSE
			' カラー -> グレー
			ARY2% = IMG_CONVERT_COLOR(ARY%, 0, 2)
		END IF
	CASE "IMG_CONVERT_RESIZE(小)"
		ARY2% = IMG_RESIZE(ARY%, LDIM(ARY%,1) * 0.7, LDIM(ARY%,2) * 0.7, 0)
	CASE "IMG_CONVERT_RESIZE(大)"
		ARY2% = IMG_RESIZE(ARY%, LDIM(ARY%,1) * 1.3, LDIM(ARY%,2) * 1.3, 0)
	CASE "IMG_BINARIZE"
		TMP% = ARY%
		IF LDIM(ARY%, 3) <> 1 THEN
			TMP% = IMG_CONVERT_COLOR(TMP%, 0, 2)
		END IF
		ARY2% = IMG_BINARIZE(TMP%, 120, 255)
	CASE "IMG_BINARIZE_AUTO"
		TMP% = ARY%
		IF LDIM(ARY%, 3) <> 1 THEN
			TMP% = IMG_CONVERT_COLOR(TMP%, 0, 2)
		END IF
		ARY2% = IMG_BINARIZE_AUTO(TMP%, 255)
	CASE "IMG_ERODE"
		ARY2% = IMG_ERODE(ARY%, 3)
	CASE "IMG_DILATE"
		ARY2% = IMG_DILATE(ARY%, 3)
	CASE "IMG_MEAN_FILTER"
		ARY2% = IMG_MEAN_FILTER(ARY%, 5)
	CASE "IMG_GAUSSIAN_FILTER"
		ARY2% = IMG_GAUSSIAN_FILTER(ARY%, 5, 1.4)
	CASE "IMG_BILATERAL_FILTER"
		ARY2% = IMG_BILATERAL_FILTER(ARY%, 5, 1.4, 2)
	CASE "IMG_SOBEL_FILTER"
		ARY2% = IMG_SOBEL_FILTER(ARY%, 5, 0)
	CASE "IMG_LAPLACIAN_FILTER"
		ARY2% = IMG_LAPLACIAN_FILTER(ARY%, 5)
	CASE "IMG_SHARP_FILTER"
		ARY2% = IMG_SHARP_FILTER(ARY%, 5, 5)
	CASE "IMG_CANNY_EDGE"
		ARY2% = IMG_CANNY_EDGE(ARY%, 100, 200)
	CASE "IMG_WARP_AFFINE"
		MTX = IMG_GET_ROTATION_MATRIX(LDIM(ARY%,2)/2, LDIM(ARY%,1)/2, 20, 1)
		ARY2% = IMG_WARP_AFFINE(ARY%, MTX, LDIM(ARY%,1), LDIM(ARY%,2), 0)
	CASE "IMG_WARP_POLAR"
		ARY2% = IMG_WARP_POLAR(ARY%, LDIM(ARY%,2)/2, LDIM(ARY%,1)/2, LDIM(ARY%,2), LDIM(ARY%,1), 50, 0)
	END SELECT
	? LDIM(ARY2%,1), LDIM(ARY2%,2), LDIM(ARY2%,3)
	GUGCLS PIC 11
	TMP% = IMG2GUG_DATA(ARY2%)
	? LDIM(TMP%,1), LDIM(TMP%,2)
	GUGDATASET PIC 11, (0,0), TMP%
END SUB

' 右から左へ転写
SUB CB_R2L(NUM, NM$, EVT)
	' 左ペインをクリア
	GUGCLS PIC 10
	' 右の画像データを左の画像データに転写
	ARY% = ARY2%
	' GUGDATASETが使える形式に変換
	TMP% = IMG2GUG_DATA(ARY%)
	' 画像データを左ペインに貼り付ける
	GUGDATASET PIC 10, (0,0), TMP%
END SUB

' 笑顔マークの画像のパス
IMG_PATH$ = "/usr/share/icons/Adwaita/256x256/emotes/face-smile.png"		' L8XA
IF FILEEXISTS(IMG_PATH$) = FALSE THEN
	IMG_PATH$ = "/usr/share/icons/Adwaita/256x256/legacy/face-smile.png"	' L9X
END IF

' ウィンドウを作ります
GUCREATE WINDOW 1, "IMG画像処理テスト", 1, "32, 0, 0, 14, 1, 9", "1050, 500", ,
GUCREATE PIC 1, 10,,"400, 400","10, 50",
GUCREATE PIC 1, 11,,"400, 400","620,50",
GUCREATE BUTTON 1, 10, "画像読取",,,"10,10",
GUCREATE TEXTBOX 1, 20, IMG_PATH$,,"200,10","120, 10",

GUCREATE LABEL 1, 10, "→下を選択で変換呼出",,,"420,20",
GUCREATE RADIOBTN 1, 10, 1,,,"420,50",
GUADD RADIOBTN 10, "転写", 1
GUADD RADIOBTN 10, "IMG_CONVERT_COLOR"
GUADD RADIOBTN 10, "IMG_CONVERT_RESIZE(小)"
GUADD RADIOBTN 10, "IMG_CONVERT_RESIZE(大)"
GUADD RADIOBTN 10, "IMG_BINARIZE"
GUADD RADIOBTN 10, "IMG_BINARIZE_AUTO"
GUADD RADIOBTN 10, "IMG_ERODE"
GUADD RADIOBTN 10, "IMG_DILATE"
GUADD RADIOBTN 10, "IMG_MEAN_FILTER"
GUADD RADIOBTN 10, "IMG_GAUSSIAN_FILTER"
GUADD RADIOBTN 10, "IMG_BILATERAL_FILTER"
GUADD RADIOBTN 10, "IMG_SOBEL_FILTER"
GUADD RADIOBTN 10, "IMG_LAPLACIAN_FILTER"
GUADD RADIOBTN 10, "IMG_SHARP_FILTER"
GUADD RADIOBTN 10, "IMG_CANNY_EDGE"
GUADD RADIOBTN 10, "IMG_WARP_AFFINE"
GUADD RADIOBTN 10, "IMG_WARP_POLAR"

GUCREATE BUTTON 1, 11, "←右から左へ転写",,,"420,430",

GUSHOW 1

ON GUEVT BUTTON 10 CALL CB_LOAD
GUEVT BUTTON 10 ON
ON GUEVT RADIOBTN 10 CALL CB_IMG
GUEVT RADIOBTN 10 ON
ON GUEVT BUTTON 11 CALL CB_R2L
GUEVT BUTTON 11 ON

CALL IMG_READ_AND_DRAW()

' GUIメインイベントループを開始 - ウィンドウを閉じるまでOSが回す
GUMAIN LOOP

END
